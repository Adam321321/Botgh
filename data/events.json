[null,{"name":"game","temp":"10","event-type":"3","_id":"haUem","actions":[{"info":"3","storage":"1","varName2":"ser","name":"Store Bot Client Info"},{"gameName":"jestem na: ${tempVars(\"ser\")} serwerach","gameLink":"","name":"Set Bot Game"}]},{"name":"Witajevent","temp":"nazwa","event-type":"6","_id":"CRyuz","actions":[{"member":"2","varName":"nazwa","info":"16","storage":"1","varName2":"avatar_url","name":"Store Member Info"},{"server":"0","varName":"","info":"35","storage":"1","varName2":"ileos","name":"Store Server Info"},{"member":"2","varName":"nazwa","info":"2","storage":"1","varName2":"nick","name":"Store Member Info"},{"title":"Witaj","author":"","color":"GREEN","timestamp":"true","url":"","authorIcon":"${tempVars(\"avatar_url\")}","imageUrl":"","thumbUrl":"","storage":"1","varName":"embedwitaj","name":"Create Embed Message"},{"storage":"1","varName":"embedwitaj","message":"Jesteś naszym ${tempVars(\"ileos\")} użytkownikiem ${tempVars(\"nick\")}!","name":"Set Embed Description"},{"storage":"1","varName":"embedwitaj","channel":"6","varName2":"kanal-powitan","storage3":"0","varName3":"","name":"Send Embed Message"}]},{"name":"ZegnajEvent","temp":"nazwa","event-type":"7","_id":"yoAOS","actions":[{"server":"0","varName":"","info":"35","storage":"1","varName2":"ileos","name":"Store Server Info"},{"member":"2","varName":"nazwa","info":"16","storage":"1","varName2":"avatar_url","name":"Store Member Info"},{"member":"2","varName":"nazwa","info":"2","storage":"1","varName2":"nick","name":"Store Member Info"},{"title":"Żegnaj","author":"","color":"RED","timestamp":"true","url":"","authorIcon":"${tempVars(\"avatar_url\")}","imageUrl":"","thumbUrl":"","storage":"1","varName":"embedwitaj","name":"Create Embed Message"},{"storage":"1","varName":"embedwitaj","message":"Dziękujemy że z nami byłeś ${tempVars(\"nick\")} zostało nas ${tempVars(\"ileos\")} ${tempVars(\"nick\")}!","name":"Set Embed Description"},{"storage":"1","varName":"embedwitaj","channel":"6","varName2":"kanal-pozegnan","storage3":"0","varName3":"","name":"Send Embed Message"}]},{"name":"komenda-nie-istnieje","permissions":"NONE","restriction":"0","_id":"NAnuA","actions":[{"storage":"1","varName":"defaultCommand","changeType":"0","value":"\"pomoc\"","name":"Control Variable"},{"storage":"1","varName":"prefix","changeType":"0","value":"Files.data.settings.tag","name":"Control Variable"},{"message":"0","varName":"","info":"2","storage":"1","varName2":"messageText","name":"Store Message Info"},{"storage":"1","varName":"messageText","comparison":"10","value":"tempVars(\"prefix\")","iftrue":"0","iftrueVal":"","iffalse":"1","iffalseVal":"","name":"Check Variable"},{"code":"const commands = Files.data.commands.map(c => c && c.name);\nlet messageText = String(tempVars(\"messageText\").slice(String(tempVars(\"prefix\")).length)).split(\" \")[0]\nif (!messageText) {\n    Actions.storeValue(tempVars(\"defaultCommand\"), 1, \"closest\", cache);\n    Actions.callNextAction(cache);\n}\n\nif (!commands.includes(messageText)) {\n    let closestWord;\n    let lowestValue = 100;\n    for (const command of commands) {\n        if (command) {\n            let distance = LevenshteinDistance(command, messageText);\n            if (distance < lowestValue) {\n                lowestValue = distance;\n                closestWord = command;\n            }\n        }\n    }\n    Actions.storeValue(closestWord, 1, \"closest\", cache);\n    Actions.callNextAction(cache);\n}\n\n// https://jsperf.com/levenshtein-distances/1\nfunction LevenshteinDistance(a, b) {\n    if(a.length === 0) return b.length; \n    if(b.length === 0) return a.length; \n\n    var matrix = [];\n\n    // increment along the first column of each row\n    var i;\n    for(i = 0; i <= b.length; i++){\n        matrix[i] = [i];\n    }\n\n    // increment each column in the first row\n    var j;\n    for(j = 0; j <= a.length; j++){\n        matrix[0][j] = j;\n    }\n\n    // Fill in the rest of the matrix\n    for(i = 1; i <= b.length; i++){\n        for(j = 1; j <= a.length; j++){\n            if(b.charAt(i-1) == a.charAt(j-1)){\n                matrix[i][j] = matrix[i-1][j-1];\n            } else {\n                matrix[i][j] = Math.min(matrix[i-1][j-1] + 1, // substitution\n                Math.min(matrix[i][j-1] + 1, // insertion\n                matrix[i-1][j] + 1)); // deletion\n            }\n        }\n    }\n    return matrix[b.length][a.length];\n};\n","behavior":"1","interpretation":"1","storage":"0","varName":"","VTypeSelect":"0","CVTypeValue":"","name":"Run Script"},{"title":"","author":"${msg.author.username}","color":"RED","url":"","authorIcon":"${msg.author.displayAvatarURL()}","authorUrl":"","imageUrl":"","thumbUrl":"","timestamp":"false","debug":"false","text":"","year":"","month":"","day":"","hour":"","minute":"","second":"","storage":"1","varName":"embed","name":"Create Embed Message"},{"storage":"1","varName":"embed","message":"Takie polecenie nie istnieje! miałeś na myśli `${tempVars(\"closest\")}`?","name":"Set Embed Description"},{"storage":"1","varName":"embed","channel":"0","varName2":"","storage3":"0","varName3":"","iffalse":"0","iffalseVal":"","messageContent":"","name":"Send Embed Message"}],"comType":"3"},{"name":"CaptchaStart","temp":"memberJoined","event-type":"1","_id":"tbmZg","actions":[{"behavior":"1","interpretation":"1","code":"if (globalVars(\"captchaStartAlreadyRan\") == null) {\n    const request = require(\"request\");\n    const Discord = require('discord.js');\n    const fs = require('fs');\n    var checkUpdates = true;\n\n    this.storeValue(true, 3, \"captchaStartAlreadyRan\", cache);\n\n    if (!fs.existsSync(\"./captchas\")) {\n        fs.mkdirSync(\"./captchas\");\n    }\n\n    fs.readdir(\"./captchas\", (err, files) => {\n        if (err) throw err;\n\n        for (const file of files) {\n            var fileExt = getExtension(file);\n            if (fileExt == \".png\") {\n                fs.unlink(`./captchas/${file}`, err => {\n                    if (err) throw err;\n                });\n            }\n        }\n    });\n\n    function getExtension(filename) {\n        var i = filename.lastIndexOf('.');\n        return (i < 0) ? '' : filename.substr(i);\n    }\n\n    var requiredIntents = [\"GUILD_MEMBERS\"];\n        var intentCheck = new Discord.Intents(DBM.Bot.intents()).toArray();\n        requiredIntents.forEach(intent => {\n            if (!intentCheck.includes(intent)) {\n                console.log(`[Captcha] You don't have the ${intent} intent enabled!`)\n            }\n        })\n\n\n\n    if (checkUpdates) {\n        request('https://raw.githubusercontent.com/ItzPike/DBM-Rawdata-Releases/master/Captcha/versionCheck.json', function(error, response, body) {\n            if (response.statusCode == 200) {\n                var allVersions = JSON.parse(body);\n\n                var commandVersions = {};\n                var eventVersions = {};\n                var commandKeys = [];\n                var eventKeys = []\n\n                allVersions[\"commands\"].forEach(commandVer => {\n                    commandVersions[commandVer[0]] = commandVer[1];\n                    commandKeys.push(commandVer[0]);\n                });\n\n                allVersions[\"events\"].forEach(eventVer => {\n                    eventVersions[eventVer[0]] = eventVer[1];\n                    eventKeys.push(eventVer[0])\n                })\n\n                fs.readFile(\"./data/commands.json\", async function(err, data) {\n                    var data = JSON.parse(data);\n\n                    var systemCommands = await data.filter(command => command != null && commandKeys.includes(command[\"_id\"]));\n\n                    for (i = 0; i < systemCommands.length; i++) {\n                        var systemActionFind = await systemCommands[i][\"actions\"].filter(actionInfo => actionInfo.name = \"Run Script\" && actionInfo.code != null);\n\n                        if (systemActionFind.length != 0) {\n                            var versionCheckSplit = systemActionFind[0].code.split(\"VersionCheck:\");\n                            if (versionCheckSplit[1] != null && versionCheckSplit[1] != commandVersions[systemCommands[i][\"_id\"]] && !isNaN(versionCheckSplit[versionCheckSplit.length - 1])) {\n                                console.log(`[Capcha] The command ${systemCommands[i][\"name\"]} needs an update!`)\n                            }\n                        }\n                    }\n                })\n\n                fs.readFile(\"./data/events.json\", async function(err, data) {\n                    var data = JSON.parse(data);\n\n                    var systemEvent = await data.filter(event => event != null && eventKeys.includes(event[\"_id\"]));\n\n                    for (i = 0; i < systemEvent.length; i++) {\n                        var systemEventFind = await systemEvent[i][\"actions\"].filter(actionInfo => actionInfo.name = \"Run Script\" && actionInfo.code != null);\n\n                        if (systemEventFind.length != 0) {\n                            var versionCheckSplit = systemEventFind[0].code.split(\"VersionCheck:\");\n                            if (versionCheckSplit != null && versionCheckSplit[versionCheckSplit.length - 1] != eventVersions[systemEvent[i][\"_id\"]] && !isNaN(versionCheckSplit[versionCheckSplit.length - 1])) {\n                                console.log(`[Capcha] The event ${systemEvent[i][\"name\"]} needs an update!`)\n                            }\n                        }\n                    }\n                })\n            }\n        });\n    }\n\n    client.on('guildMemberAdd', (member) => {\n        var memberJoined = member;\n        var serverRoleToGive = memberJoined.guild.data(\"serverCaptchaRole\");\n        var roleToGive = [];\n\n        if (serverRoleToGive != null && serverRoleToGive != 0) {\n            if (!Array.isArray(serverRoleToGive)) {\n                serverRoleToGive = [serverRoleToGive];\n            } else {\n                serverRoleToGive = serverRoleToGive;\n            }\n\n            var rolesInServer = memberJoined.guild.roles.cache.keyArray();\n\n            for (i=0; i<serverRoleToGive.length; i++) {\n                if (rolesInServer.includes(serverRoleToGive[i])) {\n                    roleToGive.push(serverRoleToGive[i]);\n                }\n            }\n\n            if (roleToGive.length > 0 || serverRoleToGive == 1) {\n                getCaptcha(3, \"\");\n            } else {\n                memberJoined.guild.setData(\"serverCaptchaRole\", 0);\n            }\n\n            if (serverRoleToGive != roleToGive) {\n                memberJoined.guild.setData(\"serverCaptchaRole\", roleToGive)\n            }\n        }\n\n        function getCaptcha(attempts, reason) {\n            var embed = {\n                \"title\": \"Automated Captcha System\",\n                \"description\": `Witaj ${memberJoined.guild.name}!\\n\\nTen serwer jest chroniony przez system captcha i musisz rozwiązać poniższe captcha.\\n\\n**Captcha rozróżnia wielkość liter.**\\n\\nJeśli odpowiesz źle, masz w sumie trzy próby, aby spróbować odpowiedzieć poprawnie.\\nCaptcha odświeży się po każdej nieudanej próbie.\\n\\nMasz 120 sekund na każdą captcha\\n\\n${attempts} pozostałe próby\\n\\n${reason}`,\n                \"color\": 0x00ff00\n            }\n\n            if (attempts != 0) {\n                request('https://captchaGenerate.itzpike.repl.co', function(error, response, body) {\n                    if (response.statusCode == 200) {\n                        body = JSON.parse(body);\n\n                        var data = body.image.replace(/^data:image\\/\\w+;base64,/, '');\n                        var fileTitle = Math.random().toString(36).substring(6);\n                        fs.writeFile(`./captchas/${fileTitle}.png`, data, {\n                            encoding: 'base64'\n                        }, function(err) {\n                            if (err) {\n                                console.log(err);\n                            }\n\n                            const file = new Discord.MessageAttachment(`./captchas/${fileTitle}.png`);\n                            embed[\"image\"] = {\n                                \"url\": `attachment://${fileTitle}.png`\n                            }\n\n                            memberJoined.send({\n                                files: [file],\n                                embed: embed\n                            }).then(msgSent => {\n                                msgSent.channel.awaitMessages(m => m.author.id == memberJoined.id, {\n                                        max: 1,\n                                        time: 120000,\n                                        errors: ['time']\n                                    })\n                                    .then(collected => {\n                                        fs.unlinkSync(`./captchas/${fileTitle}.png`);\n                                        msgSent.delete();\n                                        if (collected.first().content.replace(/\\s/g, '') == body.key) {\n                                            if (serverRoleToGive != 1) {\n                                                memberJoined.roles.add(roleToGive);\n                                            }\n                                            embed.description = \"Captcha zaliczona!\\n\\nWitaj na serwerze..\";\n                                            delete embed[\"image\"];\n                                            memberJoined.send({\n                                                embed: embed\n                                            });\n                                        } else {\n                                            getCaptcha(attempts - 1, \"źle wpisałeś captcha!\");\n                                        }\n                                    })\n                                    .catch(err => {\n                                        fs.unlinkSync(`./captchas/${fileTitle}.png`);\n                                        getCaptcha(attempts - 1, \"Czas minął!\");\n                                    });\n                            })\n                        });\n                    }\n                })\n            } else {\n                embed.color = 0xff0000;\n                embed.description = \"Weryfikacja captcha nie powiodła się!\\n\\nSkończyły Ci się próby!\\nDołącz ponownie do serwera, aby ponownie zweryfikować się captcha.\";\n                memberJoined.send({\n                    embed: embed\n                }).then(serverMess => {\n                    memberJoined.kick();\n                })\n            }\n        }\n\n\n    })\n}\n\n// VersionCheck:7","storage":"0","varName":"","name":"Run Script"}]}]